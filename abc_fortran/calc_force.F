      subroutine calc_force
      use constants
      use variables
      IMPLICIT DOUBLE PRECISION(A-H,O-Z),INTEGER(I-N)

      ! Force calculation
!     fx(1)=-2.0*x(1,2)*exp(-(x(1,2)**2.+y(1,2)**2.))-2.0*(x(1,2)-2.0)*exp(-((x(1,2)-2.0)**2.+y(1,2)**2.))-1.6*(x(1,2)+2.0)*exp(-((x(1,2)+2.0)**2.+y(1,2)**2.))
!      fy(1)=-2.0*y(1,2)*exp(-(x(1,2)**2.+y(1,2)**2.))-2.0*y(1,2)*exp(-((x(1,2)-2.0)**2.+y(1,2)**2.))-1.6*y(1,2)*exp(-((x(1,2)+2.0)**2.+y(1,2)**2.))
!      etot=-exp(-(x(1,2)**2.+y(1,2)**2.))-exp(-((x(1,2)-2.0)**2.+y(1,2)**2.))-0.8*exp(-((x(1,2)+2.0)**2.+y(1,2)**2.))

!      fx(1)=-2.0*x(1,2)*exp(-(x(1,2)**2.+y(1,2)**2.))-2.0*(x(1,2)-2.0)*exp(-((x(1,2)-2.0)**2.+y(1,2)**2.))-2.0*(x(1,2)-1.0)*exp(-((x(1,2)-1.0)**2.+(y(1,2)-1.5)**2.))
!      fy(1)=-2.0*y(1,2)*exp(-(x(1,2)**2.+y(1,2)**2.))-2.0*y(1,2)*exp(-((x(1,2)-2.0)**2.+y(1,2)**2.))-2.0*(y(1,2)-1.5)*exp(-((x(1,2)-1.0)**2.+(y(1,2)-1.5)**2.))
!      etot=-exp(-(x(1,2)**2.+y(1,2)**2.))-exp(-((x(1,2)-2.0)**2.+y(1,2)**2.))-exp(-((x(1,2)-1.0)**2.+(y(1,2)-1.5)**2.))

      fx(1)=0.0;fy(1)=0.0;etot=0.0
      do i=1,n_pes
         etot=etot-pes_a(i)*exp(-((x(1,2)-pes_x(i))**2.0+(y(1,2)-pes_y(i))**2.0)/(pes_r(i)**2.0))
         fx(1)=fx(1)-2.0*pes_a(i)/(pes_r(i)**2.0)*(x(1,2)-pes_x(i))*exp(-((x(1,2)-pes_x(i))**2.0+(y(1,2)-pes_y(i))**2.0)/(pes_r(i)**2.0))
         fy(1)=fy(1)-2.0*pes_a(i)/(pes_r(i)**2.0)*(y(1,2)-pes_y(i))*exp(-((x(1,2)-pes_x(i))**2.0+(y(1,2)-pes_y(i))**2.0)/(pes_r(i)**2.0))
      end do
      etot=etot+0.02*y(1,2)**2.0-0.1*x(1,2)
      fx(1)=fx(1)+0.1
      fy(1)=fy(1)-0.04*y(1,2)
      end
